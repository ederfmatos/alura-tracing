server:
  port: '8080'

spring:
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: '6379'
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: 'false'
  cache:
    redis:
      enable-statistics: 'true'
      time-to-live: '60000'
    type: redis
    cache-names: nomeCurso,listaDeCursos
  sql:
    init:
      mode: always
      continue-on-error: true
      platform: postgres
  datasource:
    password: nJ6vsW37rCd1v88
    username: alura
    url: jdbc:postgresql://localhost:5432/logsdb

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: 'true'
    distribution:
      slo:
        http: 5ms,10ms,25ms,50ms,100ms,200ms,300ms,400ms,500ms,1s,2s
    tags:
      application: api-cursos
    enable:
      jvm: 'true'
  endpoint:
    health:
      show-details: always

info:
  app:
    name: '@project.name@'
    encoding: '@project.build.sourceEncoding@'
    java:
      version: '@java.version@'
    version: '@project.version@'
    description: '@project.description@'
